name: Deploy

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine environment
        id: environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "environment=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          fi

      - name: Copy JWT keys
        env:
          JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
        run: |
          mkdir keys

          echo "$JWT_PUBLIC_KEY" > keys/jwt-public.pem
          echo "$JWT_PRIVATE_KEY" > keys/jwt-private.pem

      - name: Create .env file
        env:
          DEV_ENV: ${{ secrets.DEV_ENV }}
          PROD_ENV: ${{ secrets.PROD_ENV }}
        run: |
          if [ "${{ steps.environment.outputs.environment }}" = "dev" ]; then
            echo "$DEV_ENV" > .env
          else
            echo "$PROD_ENV" > .env
          fi
          
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase username
        id: lowercase-repository
        run: echo "repository=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.lowercase-repository.outputs.repository }}:${{ github.sha }}
            ghcr.io/${{ steps.lowercase-repository.outputs.repository }}:${{ steps.environment.outputs.environment }}

      - name: Set image tag output
        id: set-tag
        run: echo "image-tag=ghcr.io/${{ steps.lowercase-repository.outputs.repository }}:${{ steps.environment.outputs.environment }}" >> $GITHUB_OUTPUT

      - name: Delete keys and .env
        run: |
          rm -rf keys
          rm -f .env

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - name: Deploy to dev
        env:
          IMAGE_TAG: ${{ needs.build.outputs.image-tag }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BACKEND__RUN__PORT: ${{ secrets.DEV__BACKEND__RUN__PORT }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem

          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

          ssh -i key.pem $SSH_USER@$SSH_HOST <<EOF
            docker stop msu-backend-dev || true
            docker rm msu-backend-dev || true
            docker image prune -f -a

            echo "$GITHUB_TOKEN" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull $IMAGE_TAG

            docker run -d \
              --name msu-backend-dev \
              --network msu-network-dev \
              -p $BACKEND__RUN__PORT:$BACKEND__RUN__PORT \
              -e BACKEND__RUN__PORT=$BACKEND__RUN__PORT \
              $IMAGE_TAG
          EOF

          rm -f key.pem

  deploy-prod:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to prod
        env:
          IMAGE_TAG: ${{ needs.build.outputs.image-tag }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BACKEND__RUN__PORT: ${{ secrets.PROD__BACKEND__RUN__PORT }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem

          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

          ssh -i key.pem $SSH_USER@$SSH_HOST <<EOF
            docker stop msu-backend-prod || true
            docker rm msu-backend-prod || true
            docker image prune -f -a

            echo "$GITHUB_TOKEN" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull $IMAGE_TAG

            docker run -d \
              --name msu-backend-prod \
              --network msu-network-prod \
              -p $BACKEND__RUN__PORT:$BACKEND__RUN__PORT \
              -e BACKEND__RUN__PORT=$BACKEND__RUN__PORT \
              $IMAGE_TAG
          EOF

          rm -f key.pem
